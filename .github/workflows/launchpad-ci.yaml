###
# Continuous Integration
# ------------
# This workflow will run tests, build an image, and push to the remote Docker Registry.
#
# IMPORTANT: Managed by LaunchPad DO NOT EDIT!
###

name: "CI [Managed by LaunchPad]"

on:
  pull_request:
    branches:
      - main
      - master
  push:
    branches:
      - main
      - master

jobs:
  ##
  # Lint & Test
  # -----
  # Run standard Linting and Testing via package.json script hooks.
  ##
  lintAndTest:
    name: Lint & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v1
      - name: Use Node.js v14
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Install Packages
        run: yarn install
      - name: Lint
        run: yarn lint
      - name: Test
        run: yarn test

  ##
  # Build & Push
  # -----
  # Build & Push to the the registry defined in the LaunchPad.yaml
  ##
  buildAndPush:
    name: Build & Push
    runs-on: ubuntu-latest
    needs:
      - lintAndTest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v1
      - name: Login to GCR
        uses: docker/login-action@v1
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GCP_OPS_PROJECT_SA_KEY }}
      - name: Parse the "launchpad.yaml" Config
        id: parseConfig
        uses: bluenovaio/launchpad-parser@v1.0.0
      - name: Build & Push Docker Image
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: gcr.io/${{ secrets.GCP_OPS_PROJECT_ID }}/${{ fromJSON(steps.parseConfig.outputs.contents).name }}:${{ github.sha }}

  ##
  # Deploy Preview
  # -----
  # Deploy a preview version of the application.
  ##
  deployPreview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main' && github.ref != 'refs/heads/master'
    steps:
      - name: Parse the "launchpad.yaml" Config
        id: parseConfig
        uses: bluenovaio/launchpad-parser@v1.0.0
      - name: Deploy Preview Service
        id: deploy
        uses: bluenovaio/deploy-cloudrun@main
        with:
          action: deploy
          image: gcr.io/${{ secrets.GCP_OPS_PROJECT_ID }}/${{ fromJSON(steps.parseConfig.outputs.contents).name }}:${{ github.sha }}
          service: ${{ fromJSON(steps.parseConfig.outputs.contents).name }}-${{ github.sha }}
          credentials: ${{ secrets.GCP_PREPRD_PROJECT_SA_KEY }}
      - name: Preview Deploy Link
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'You can view the preview here: [steps.deploy.outputs.url](steps.deploy.outputs.url)'
            });

  ##
  # Clean-up Preview
  # -----
  # Cleanup the preview version of the application on Merge.
  ##
  cleanUpPreview:
    name: Cleanup Preview Service
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - name: Delete Preview Service
        id: delete
        uses: bluenovaio/deploy-cloudrun@main
        with:
          action: delete
          image: gcr.io/${{ secrets.GCP_OPS_PROJECT_ID }}/${{ fromJSON(steps.parseConfig.outputs.contents).name }}:${{ github.sha }}
          service: ${{ fromJSON(steps.parseConfig.outputs.contents).name }}-${{ github.sha }}
          credentials: ${{ secrets.GCP_PREPRD_PROJECT_SA_KEY }}
